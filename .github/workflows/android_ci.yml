name: Android CI
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# Cancel in-progress runs for the same branch/PR
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  # Gradle optimization environment variables
  GRADLE_OPTS: "-Dorg.gradle.daemon=true -Dorg.gradle.parallel=true -Dorg.gradle.configureondemand=true -Dorg.gradle.caching=true -Xmx4g -XX:+UseParallelGC"

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        # Shallow clone for faster checkout
        fetch-depth: 1
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle
        
    # Enhanced Gradle setup with dependency caching
    - name: Setup Gradle with enhanced caching
      uses: gradle/actions/setup-gradle@v3
      with:
        gradle-version: '8.1.1'
        cache-read-only: ${{ github.event_name == 'pull_request' }}
        # Enable build scan for performance insights
        build-scan-publish: true
        build-scan-terms-of-service-url: "https://gradle.com/terms-of-service"
        build-scan-terms-of-service-agree: "yes"
        
    # Cache Android SDK and build tools
    - name: Cache Android SDK
      uses: actions/cache@v4
      with:
        path: |
          ~/.android/avd/*
          ~/.android/adb*
          ${{ env.ANDROID_SDK_ROOT }}
        key: android-sdk-${{ runner.os }}-${{ hashFiles('**/*.gradle*') }}
        restore-keys: |
          android-sdk-${{ runner.os }}-
          
    # Cache Kotlin compiler
    - name: Cache Kotlin Compiler
      uses: actions/cache@v4
      with:
        path: ~/.konan
        key: kotlin-${{ runner.os }}-${{ hashFiles('**/*.gradle*') }}
        restore-keys: |
          kotlin-${{ runner.os }}-
        
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    # Pre-download dependencies to leverage caching
    - name: Download dependencies
      run: ./gradlew dependencies --no-daemon --stacktrace
      
    # Run tests and build in parallel using Gradle's parallel execution
    - name: Run tests and build APK
      run: |
        # Use parallel execution and configure JVM for better performance
        ./gradlew \
          testDebugUnitTest \
          assembleDebug \
          --parallel \
          --build-cache \
          --configuration-cache \
          --no-daemon \
          --stacktrace \
          -Dorg.gradle.workers.max=4 \
          -Dkotlin.incremental=true \
          -Dkotlin.compiler.execution.strategy=in-process
      
    - name: List build outputs (for debugging)
      run: find app/build/outputs -name "*.apk" -type f
      
    - name: Upload debug APK
      uses: actions/upload-artifact@v4
      with:
        name: debug-apk-${{ github.run_number }}
        path: app/build/outputs/apk/debug/*.apk
        retention-days: 30
        compression-level: 6  # Faster compression
        
    # Upload test results for better debugging
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ github.run_number }}
        path: |
          app/build/reports/tests/
          app/build/test-results/
        retention-days: 7
        
    - name: Create release summary
      run: |
        echo "## Build Summary" >> $GITHUB_STEP_SUMMARY
        echo "âœ… Build completed successfully" >> $GITHUB_STEP_SUMMARY
        echo "ðŸ“± Debug APK has been uploaded as an artifact" >> $GITHUB_STEP_SUMMARY
        echo "ðŸ§ª Test results are also available as artifacts" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Download APK" >> $GITHUB_STEP_SUMMARY
        echo "The debug APK can be downloaded from the Actions artifacts section above." >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Performance" >> $GITHUB_STEP_SUMMARY
        echo "- Build time: $(date -u)" >> $GITHUB_STEP_SUMMARY
        echo "- Runner: ${{ runner.os }}" >> $GITHUB_STEP_SUMMARY