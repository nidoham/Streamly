name: Android CI Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:  # Allow manual triggering

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  GRADLE_OPTS: "-Dorg.gradle.daemon=true -Dorg.gradle.parallel=true -Dorg.gradle.configureondemand=true -Dorg.gradle.caching=true -Xmx4g -XX:+UseParallelGC"
  ANDROID_API_LEVEL: 34
  ANDROID_BUILD_TOOLS: "34.0.0"
  EMULATOR_API_LEVEL: 31  # Lower API for faster emulation

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        variant: [debug]
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Setup JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        api-level: ${{ env.ANDROID_API_LEVEL }}
        build-tools: ${{ env.ANDROID_BUILD_TOOLS }}
        cmake: 3.22.1
        ndk: 25.2.9519653
        
    - name: Cache Gradle
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
          ~/.gradle/configuration-cache
          build-cache/
        key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          gradle-${{ runner.os }}-

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Run Lint and Tests
      run: |
        ./gradlew lint${{ matrix.variant }} test${{ matrix.variant }}UnitTest \
          --parallel \
          --build-cache \
          --configuration-cache \
          --no-daemon \
          --stacktrace \
          -Dorg.gradle.workers.max=$(nproc)
        
    - name: Build APK
      run: |
        ./gradlew assemble${{ matrix.variant }} \
          --build-cache \
          --no-daemon \
          --stacktrace \
          -Dorg.gradle.workers.max=$(nproc)
          
    - name: Generate Build Scan
      if: always()
      run: ./gradlew buildScanPublish --no-daemon
      
    - name: Archive test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          app/build/reports/tests/
          app/build/test-results/
          app/build/reports/lint-results*
        retention-days: 7

    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: apk-${{ matrix.variant }}
        path: app/build/outputs/apk/${{ matrix.variant }}/*.apk
        retention-days: 30

    - name: Generate Build Report
      if: always()
      run: |
        echo "## Build Summary" >> $GITHUB_STEP_SUMMARY
        echo "| Metric | Value |" >> $GITHUB_STEP_SUMMARY
        echo "|--------|-------|" >> $GITHUB_STEP_SUMMARY
        echo "| Status | ${{ job.status }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Variant | ${{ matrix.variant }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Runner | ${{ runner.os }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Build Time | $(date -u '+%Y-%m-%d %H:%M:%S UTC') |" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Download APKs" >> $GITHUB_STEP_SUMMARY
        echo "Artifacts are available in the Actions artifacts section." >> $GITHUB_STEP_SUMMARY

  ui-tests:
    runs-on: macos-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Android Emulator
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ env.EMULATOR_API_LEVEL }}
          arch: x86_64
          profile: Nexus 6
          script: |
            ./gradlew connectedDebugAndroidTest -Pandroid.testInstrumentationRunnerArguments.annotation=androidx.test.filters.SdkSuppress
            
      - name: Archive UI test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ui-test-results
          path: app/build/reports/androidTests/connected/
          retention-days: 7

  deploy:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [build, ui-tests]
    steps:
      - name: Download APK
        uses: actions/download-artifact@v4
        with:
          name: apk-debug
          path: apk-artifact
          
      - name: Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ secrets.FIREBASE_APP_ID }}
          serviceCredentialsFile: ${{ secrets.GCP_SA_KEY }}
          groups: testers
          file: apk-artifact/*.apk